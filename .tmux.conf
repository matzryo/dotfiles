# キーストロークのディレイを減らす
set -sg escape-time 1

# マウス操作を有効にする
setw -g mouse on

# 256色端末を使用する
set -g default-terminal "screen-256color"

# ステータスバーの色を設定する
set -g status-style fg=white,bg=black

# ウィンドウリストの色を設定する
setw -g window-status-style fg=cyan,bg=default,dim
# アクティブなウィンドウを目立たせる
setw -g window-status-current-style fg=white,bg=red,bright

# ペインボーダーの色を設定する
set -g pane-border-style fg=green,bg=black
# アクティブなペインを目立たせる
set -g pane-active-border-style fg=white,bg=yellow

# コマンドラインの色を設定する
set -g message-style fg=white,bg=black,bright

# スクロールバックできる最大行数を増やす(デフォルト2000)
set -g history-limit 10000

# ステータスバーを設定する
## 左パネルを設定する
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
## 右パネルを設定する
set -g status-right "#[fg=cyan][%Y-%m-%d(%a) %H:%M]"
## リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 60
## ウィンドウリストの位置を中心寄せにする
set -g status-justify centre
## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on
## ステータスバーを上部に表示する
set -g status-position top

# コピーモードを設定する
## viのキーバインドを使用する
setw -g mode-keys vi
## コピーモードの操作をviライクに設定する
bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind -T copy-mode-vi Enter

## クリップボード共有を有効にする
### for mac
if "which pbcopy" "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'"
if "which pocopy" "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'pbcopy'"
### for Linux
if "which xsel" "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xsel -bi'"
if "which xsel" "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xsel -bi'"

# 起動時に非ログインシェルを立ち上げる
# https://wiki.archlinux.jp/index.php/Tmux#.E9.9D.9E.E3.83.AD.E3.82.B0.E3.82.A4.E3.83.B3.E3.82.B7.E3.82.A7.E3.83.AB.E3.82.92.E8.B5.B7.E5.8B.95.E3.81.99.E3.82.8B
#=> bashが立ち上がり、.bashrcが読まれる。環境変数が設定され、fishが呼ばれる
set -g default-command "${SHELL}"

# 新ペインまたは新ウインドウを開いたとき、カレントディレクトリを引き継ぐ
# https://unix.stackexchange.com/a/118381
bind '%' split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind '"' split-window -v -c '#{pane_current_path}'  # Split panes vertically
bind c new-window -c "#{pane_current_path}"
